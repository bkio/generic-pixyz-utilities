# automatically generated by the FlatBuffers compiler, do not modify

# namespace: FB

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FBVertexNormalTangent(object):
    __slots__ = ['_tab']

    # FBVertexNormalTangent
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FBVertexNormalTangent
    def Vertex(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # FBVertexNormalTangent
    def Normal(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 12)
        return obj

    # FBVertexNormalTangent
    def Tangent(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 24)
        return obj


def CreateFBVertexNormalTangent(builder, Vertex_X, Vertex_Y, Vertex_Z, Normal_X, Normal_Y, Normal_Z, Tangent_X, Tangent_Y, Tangent_Z):
    builder.Prep(4, 36)
    builder.Prep(4, 12)
    builder.PrependFloat32(Tangent_Z)
    builder.PrependFloat32(Tangent_Y)
    builder.PrependFloat32(Tangent_X)
    builder.Prep(4, 12)
    builder.PrependFloat32(Normal_Z)
    builder.PrependFloat32(Normal_Y)
    builder.PrependFloat32(Normal_X)
    builder.Prep(4, 12)
    builder.PrependFloat32(Vertex_Z)
    builder.PrependFloat32(Vertex_Y)
    builder.PrependFloat32(Vertex_X)
    return builder.Offset()
