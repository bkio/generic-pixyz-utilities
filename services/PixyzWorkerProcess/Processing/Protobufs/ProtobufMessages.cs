// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protobuf_messages.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PixyzWorkerProcess.Processing.Protobufs {

  /// <summary>Holder for reflection information generated from protobuf_messages.proto</summary>
  public static partial class ProtobufMessagesReflection {

    #region Descriptor
    /// <summary>File descriptor for protobuf_messages.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtobufMessagesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chdwcm90b2J1Zl9tZXNzYWdlcy5wcm90bxIRcHJvdG9idWZfbWVzc2FnZXMi",
            "LAoJUENvbG9yUkdCEgkKAVIYASABKAISCQoBRxgCIAEoAhIJCgFCGAMgASgC",
            "IjgKClBDb2xvclJHQkESCQoBUhgBIAEoAhIJCgFHGAIgASgCEgkKAUIYAyAB",
            "KAISCQoBQRgEIAEoAiIhCglQVmVjdG9yMkQSCQoBWBgBIAEoAhIJCgFZGAIg",
            "ASgCIiwKCVBWZWN0b3IzRBIJCgFYGAEgASgCEgkKAVkYAiABKAISCQoBWhgD",
            "IAEoAiKhAQoUUFZlcnRleE5vcm1hbFRhbmdlbnQSLAoGVmVydGV4GAEgASgL",
            "MhwucHJvdG9idWZfbWVzc2FnZXMuUFZlY3RvcjNEEiwKBk5vcm1hbBgCIAEo",
            "CzIcLnByb3RvYnVmX21lc3NhZ2VzLlBWZWN0b3IzRBItCgdUYW5nZW50GAMg",
            "ASgLMhwucHJvdG9idWZfbWVzc2FnZXMuUFZlY3RvcjNEImEKBFBMT0QSSAoX",
            "VmVydGV4Tm9ybWFsVGFuZ2VudExpc3QYASADKAsyJy5wcm90b2J1Zl9tZXNz",
            "YWdlcy5QVmVydGV4Tm9ybWFsVGFuZ2VudBIPCgdJbmRleGVzGAIgAygNIt0B",
            "Cg1QR2VvbWV0cnlQYXJ0EhIKCkdlb21ldHJ5SUQYASABKAQSLgoITG9jYXRp",
            "b24YAiABKAsyHC5wcm90b2J1Zl9tZXNzYWdlcy5QVmVjdG9yM0QSLgoIUm90",
            "YXRpb24YAyABKAsyHC5wcm90b2J1Zl9tZXNzYWdlcy5QVmVjdG9yM0QSKwoF",
            "U2NhbGUYBCABKAsyHC5wcm90b2J1Zl9tZXNzYWdlcy5QVmVjdG9yM0QSKwoF",
            "Q29sb3IYBSABKAsyHC5wcm90b2J1Zl9tZXNzYWdlcy5QQ29sb3JSR0IilQEK",
            "DlBIaWVyYXJjaHlOb2RlEhAKCFVuaXF1ZUlEGAEgASgEEhAKCFBhcmVudElE",
            "GAIgASgEEhIKCk1ldGFkYXRhSUQYAyABKAQSNwoNR2VvbWV0cnlQYXJ0cxgE",
            "IAMoCzIgLnByb3RvYnVmX21lc3NhZ2VzLlBHZW9tZXRyeVBhcnQSEgoKQ2hp",
            "bGROb2RlcxgFIAMoBCIzCg1QTWV0YWRhdGFOb2RlEhAKCFVuaXF1ZUlEGAEg",
            "ASgEEhAKCE1ldGFkYXRhGAIgASgJIlsKDVBHZW9tZXRyeU5vZGUSEAoIVW5p",
            "cXVlSUQYASABKAQSEQoJTG9kTnVtYmVyGAIgASgFEiUKBExPRHMYAyADKAsy",
            "Fy5wcm90b2J1Zl9tZXNzYWdlcy5QTE9EIv0BCgxQTm9kZU1lc3NhZ2USDwoH",
            "TW9kZWxJRBgBIAEoBBIOCgZFcnJvcnMYAiADKAkSOAoNSGllcmFyY2h5Tm9k",
            "ZRgDIAEoCzIhLnByb3RvYnVmX21lc3NhZ2VzLlBIaWVyYXJjaHlOb2RlEjYK",
            "DE1ldGFkYXRhTm9kZRgEIAEoCzIgLnByb3RvYnVmX21lc3NhZ2VzLlBNZXRh",
            "ZGF0YU5vZGUSNgoMR2VvbWV0cnlOb2RlGAUgASgLMiAucHJvdG9idWZfbWVz",
            "c2FnZXMuUEdlb21ldHJ5Tm9kZRIMCgREb25lGAYgASgIEhQKDE1lc3NhZ2VD",
            "b3VudBgHIAEoBUIqqgInUGl4eXpXb3JrZXJQcm9jZXNzLlByb2Nlc3Npbmcu",
            "UHJvdG9idWZzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB), global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB.Parser, new[]{ "R", "G", "B" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PColorRGBA), global::PixyzWorkerProcess.Processing.Protobufs.PColorRGBA.Parser, new[]{ "R", "G", "B", "A" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PVector2D), global::PixyzWorkerProcess.Processing.Protobufs.PVector2D.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PVector3D), global::PixyzWorkerProcess.Processing.Protobufs.PVector3D.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent), global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent.Parser, new[]{ "Vertex", "Normal", "Tangent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PLOD), global::PixyzWorkerProcess.Processing.Protobufs.PLOD.Parser, new[]{ "VertexNormalTangentList", "Indexes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart), global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart.Parser, new[]{ "GeometryID", "Location", "Rotation", "Scale", "Color" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode), global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode.Parser, new[]{ "UniqueID", "ParentID", "MetadataID", "GeometryParts", "ChildNodes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode), global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode.Parser, new[]{ "UniqueID", "Metadata" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode), global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode.Parser, new[]{ "UniqueID", "LodNumber", "LODs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PixyzWorkerProcess.Processing.Protobufs.PNodeMessage), global::PixyzWorkerProcess.Processing.Protobufs.PNodeMessage.Parser, new[]{ "ModelID", "Errors", "HierarchyNode", "MetadataNode", "GeometryNode", "Done", "MessageCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// [START messages]
  /// </summary>
  public sealed partial class PColorRGB : pb::IMessage<PColorRGB>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PColorRGB> _parser = new pb::MessageParser<PColorRGB>(() => new PColorRGB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PColorRGB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGB(PColorRGB other) : this() {
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGB Clone() {
      return new PColorRGB(this);
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 1;
    private float r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "G" field.</summary>
    public const int GFieldNumber = 2;
    private float g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "B" field.</summary>
    public const int BFieldNumber = 3;
    private float b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PColorRGB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PColorRGB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
      if (G != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
      if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (R != 0F) {
        size += 1 + 4;
      }
      if (G != 0F) {
        size += 1 + 4;
      }
      if (B != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PColorRGB other) {
      if (other == null) {
        return;
      }
      if (other.R != 0F) {
        R = other.R;
      }
      if (other.G != 0F) {
        G = other.G;
      }
      if (other.B != 0F) {
        B = other.B;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PColorRGBA : pb::IMessage<PColorRGBA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PColorRGBA> _parser = new pb::MessageParser<PColorRGBA>(() => new PColorRGBA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PColorRGBA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGBA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGBA(PColorRGBA other) : this() {
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      a_ = other.a_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PColorRGBA Clone() {
      return new PColorRGBA(this);
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 1;
    private float r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "G" field.</summary>
    public const int GFieldNumber = 2;
    private float g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "B" field.</summary>
    public const int BFieldNumber = 3;
    private float b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "A" field.</summary>
    public const int AFieldNumber = 4;
    private float a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PColorRGBA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PColorRGBA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(R, other.R)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(G, other.G)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(B, other.B)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(A, other.A)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (R != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(R);
      if (G != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(G);
      if (B != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(B);
      if (A != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(A);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (A != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (R != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(R);
      }
      if (G != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(G);
      }
      if (B != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(B);
      }
      if (A != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (R != 0F) {
        size += 1 + 4;
      }
      if (G != 0F) {
        size += 1 + 4;
      }
      if (B != 0F) {
        size += 1 + 4;
      }
      if (A != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PColorRGBA other) {
      if (other == null) {
        return;
      }
      if (other.R != 0F) {
        R = other.R;
      }
      if (other.G != 0F) {
        G = other.G;
      }
      if (other.B != 0F) {
        B = other.B;
      }
      if (other.A != 0F) {
        A = other.A;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
          case 37: {
            A = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            R = input.ReadFloat();
            break;
          }
          case 21: {
            G = input.ReadFloat();
            break;
          }
          case 29: {
            B = input.ReadFloat();
            break;
          }
          case 37: {
            A = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PVector2D : pb::IMessage<PVector2D>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PVector2D> _parser = new pb::MessageParser<PVector2D>(() => new PVector2D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PVector2D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector2D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector2D(PVector2D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector2D Clone() {
      return new PVector2D(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PVector2D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PVector2D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PVector2D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PVector3D : pb::IMessage<PVector3D>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PVector3D> _parser = new pb::MessageParser<PVector3D>(() => new PVector3D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PVector3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3D(PVector3D other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVector3D Clone() {
      return new PVector3D(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PVector3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PVector3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PVector3D other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PVertexNormalTangent : pb::IMessage<PVertexNormalTangent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PVertexNormalTangent> _parser = new pb::MessageParser<PVertexNormalTangent>(() => new PVertexNormalTangent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PVertexNormalTangent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVertexNormalTangent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVertexNormalTangent(PVertexNormalTangent other) : this() {
      vertex_ = other.vertex_ != null ? other.vertex_.Clone() : null;
      normal_ = other.normal_ != null ? other.normal_.Clone() : null;
      tangent_ = other.tangent_ != null ? other.tangent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PVertexNormalTangent Clone() {
      return new PVertexNormalTangent(this);
    }

    /// <summary>Field number for the "Vertex" field.</summary>
    public const int VertexFieldNumber = 1;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D vertex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Vertex {
      get { return vertex_; }
      set {
        vertex_ = value;
      }
    }

    /// <summary>Field number for the "Normal" field.</summary>
    public const int NormalFieldNumber = 2;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D normal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Normal {
      get { return normal_; }
      set {
        normal_ = value;
      }
    }

    /// <summary>Field number for the "Tangent" field.</summary>
    public const int TangentFieldNumber = 3;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D tangent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Tangent {
      get { return tangent_; }
      set {
        tangent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PVertexNormalTangent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PVertexNormalTangent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Vertex, other.Vertex)) return false;
      if (!object.Equals(Normal, other.Normal)) return false;
      if (!object.Equals(Tangent, other.Tangent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (vertex_ != null) hash ^= Vertex.GetHashCode();
      if (normal_ != null) hash ^= Normal.GetHashCode();
      if (tangent_ != null) hash ^= Tangent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (vertex_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Vertex);
      }
      if (normal_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Normal);
      }
      if (tangent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tangent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (vertex_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Vertex);
      }
      if (normal_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Normal);
      }
      if (tangent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Tangent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (vertex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vertex);
      }
      if (normal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Normal);
      }
      if (tangent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tangent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PVertexNormalTangent other) {
      if (other == null) {
        return;
      }
      if (other.vertex_ != null) {
        if (vertex_ == null) {
          Vertex = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Vertex.MergeFrom(other.Vertex);
      }
      if (other.normal_ != null) {
        if (normal_ == null) {
          Normal = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Normal.MergeFrom(other.Normal);
      }
      if (other.tangent_ != null) {
        if (tangent_ == null) {
          Tangent = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Tangent.MergeFrom(other.Tangent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (vertex_ == null) {
              Vertex = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Vertex);
            break;
          }
          case 18: {
            if (normal_ == null) {
              Normal = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Normal);
            break;
          }
          case 26: {
            if (tangent_ == null) {
              Tangent = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Tangent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (vertex_ == null) {
              Vertex = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Vertex);
            break;
          }
          case 18: {
            if (normal_ == null) {
              Normal = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Normal);
            break;
          }
          case 26: {
            if (tangent_ == null) {
              Tangent = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Tangent);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PLOD : pb::IMessage<PLOD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PLOD> _parser = new pb::MessageParser<PLOD>(() => new PLOD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PLOD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLOD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLOD(PLOD other) : this() {
      vertexNormalTangentList_ = other.vertexNormalTangentList_.Clone();
      indexes_ = other.indexes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PLOD Clone() {
      return new PLOD(this);
    }

    /// <summary>Field number for the "VertexNormalTangentList" field.</summary>
    public const int VertexNormalTangentListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent> _repeated_vertexNormalTangentList_codec
        = pb::FieldCodec.ForMessage(10, global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent.Parser);
    private readonly pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent> vertexNormalTangentList_ = new pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PVertexNormalTangent> VertexNormalTangentList {
      get { return vertexNormalTangentList_; }
    }

    /// <summary>Field number for the "Indexes" field.</summary>
    public const int IndexesFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_indexes_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> indexes_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Indexes {
      get { return indexes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PLOD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PLOD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vertexNormalTangentList_.Equals(other.vertexNormalTangentList_)) return false;
      if(!indexes_.Equals(other.indexes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vertexNormalTangentList_.GetHashCode();
      hash ^= indexes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      vertexNormalTangentList_.WriteTo(output, _repeated_vertexNormalTangentList_codec);
      indexes_.WriteTo(output, _repeated_indexes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      vertexNormalTangentList_.WriteTo(ref output, _repeated_vertexNormalTangentList_codec);
      indexes_.WriteTo(ref output, _repeated_indexes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vertexNormalTangentList_.CalculateSize(_repeated_vertexNormalTangentList_codec);
      size += indexes_.CalculateSize(_repeated_indexes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PLOD other) {
      if (other == null) {
        return;
      }
      vertexNormalTangentList_.Add(other.vertexNormalTangentList_);
      indexes_.Add(other.indexes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vertexNormalTangentList_.AddEntriesFrom(input, _repeated_vertexNormalTangentList_codec);
            break;
          }
          case 18:
          case 16: {
            indexes_.AddEntriesFrom(input, _repeated_indexes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            vertexNormalTangentList_.AddEntriesFrom(ref input, _repeated_vertexNormalTangentList_codec);
            break;
          }
          case 18:
          case 16: {
            indexes_.AddEntriesFrom(ref input, _repeated_indexes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PGeometryPart : pb::IMessage<PGeometryPart>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PGeometryPart> _parser = new pb::MessageParser<PGeometryPart>(() => new PGeometryPart());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PGeometryPart> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryPart() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryPart(PGeometryPart other) : this() {
      geometryID_ = other.geometryID_;
      location_ = other.location_ != null ? other.location_.Clone() : null;
      rotation_ = other.rotation_ != null ? other.rotation_.Clone() : null;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryPart Clone() {
      return new PGeometryPart(this);
    }

    /// <summary>Field number for the "GeometryID" field.</summary>
    public const int GeometryIDFieldNumber = 1;
    private ulong geometryID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong GeometryID {
      get { return geometryID_; }
      set {
        geometryID_ = value;
      }
    }

    /// <summary>Field number for the "Location" field.</summary>
    public const int LocationFieldNumber = 2;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D location_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Location {
      get { return location_; }
      set {
        location_ = value;
      }
    }

    /// <summary>Field number for the "Rotation" field.</summary>
    public const int RotationFieldNumber = 3;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D rotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Rotation {
      get { return rotation_; }
      set {
        rotation_ = value;
      }
    }

    /// <summary>Field number for the "Scale" field.</summary>
    public const int ScaleFieldNumber = 4;
    private global::PixyzWorkerProcess.Processing.Protobufs.PVector3D scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PVector3D Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "Color" field.</summary>
    public const int ColorFieldNumber = 5;
    private global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PGeometryPart);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PGeometryPart other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GeometryID != other.GeometryID) return false;
      if (!object.Equals(Location, other.Location)) return false;
      if (!object.Equals(Rotation, other.Rotation)) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      if (!object.Equals(Color, other.Color)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GeometryID != 0UL) hash ^= GeometryID.GetHashCode();
      if (location_ != null) hash ^= Location.GetHashCode();
      if (rotation_ != null) hash ^= Rotation.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GeometryID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GeometryID);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (color_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GeometryID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(GeometryID);
      }
      if (location_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Location);
      }
      if (rotation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Rotation);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (color_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Color);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GeometryID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GeometryID);
      }
      if (location_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Location);
      }
      if (rotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rotation);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PGeometryPart other) {
      if (other == null) {
        return;
      }
      if (other.GeometryID != 0UL) {
        GeometryID = other.GeometryID;
      }
      if (other.location_ != null) {
        if (location_ == null) {
          Location = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Location.MergeFrom(other.Location);
      }
      if (other.rotation_ != null) {
        if (rotation_ == null) {
          Rotation = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Rotation.MergeFrom(other.Rotation);
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          Scale = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
        }
        Scale.MergeFrom(other.Scale);
      }
      if (other.color_ != null) {
        if (color_ == null) {
          Color = new global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB();
        }
        Color.MergeFrom(other.Color);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GeometryID = input.ReadUInt64();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 34: {
            if (scale_ == null) {
              Scale = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 42: {
            if (color_ == null) {
              Color = new global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GeometryID = input.ReadUInt64();
            break;
          }
          case 18: {
            if (location_ == null) {
              Location = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Location);
            break;
          }
          case 26: {
            if (rotation_ == null) {
              Rotation = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Rotation);
            break;
          }
          case 34: {
            if (scale_ == null) {
              Scale = new global::PixyzWorkerProcess.Processing.Protobufs.PVector3D();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 42: {
            if (color_ == null) {
              Color = new global::PixyzWorkerProcess.Processing.Protobufs.PColorRGB();
            }
            input.ReadMessage(Color);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PHierarchyNode : pb::IMessage<PHierarchyNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PHierarchyNode> _parser = new pb::MessageParser<PHierarchyNode>(() => new PHierarchyNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PHierarchyNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PHierarchyNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PHierarchyNode(PHierarchyNode other) : this() {
      uniqueID_ = other.uniqueID_;
      parentID_ = other.parentID_;
      metadataID_ = other.metadataID_;
      geometryParts_ = other.geometryParts_.Clone();
      childNodes_ = other.childNodes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PHierarchyNode Clone() {
      return new PHierarchyNode(this);
    }

    /// <summary>Field number for the "UniqueID" field.</summary>
    public const int UniqueIDFieldNumber = 1;
    private ulong uniqueID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UniqueID {
      get { return uniqueID_; }
      set {
        uniqueID_ = value;
      }
    }

    /// <summary>Field number for the "ParentID" field.</summary>
    public const int ParentIDFieldNumber = 2;
    private ulong parentID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ParentID {
      get { return parentID_; }
      set {
        parentID_ = value;
      }
    }

    /// <summary>Field number for the "MetadataID" field.</summary>
    public const int MetadataIDFieldNumber = 3;
    private ulong metadataID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MetadataID {
      get { return metadataID_; }
      set {
        metadataID_ = value;
      }
    }

    /// <summary>Field number for the "GeometryParts" field.</summary>
    public const int GeometryPartsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart> _repeated_geometryParts_codec
        = pb::FieldCodec.ForMessage(34, global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart.Parser);
    private readonly pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart> geometryParts_ = new pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PGeometryPart> GeometryParts {
      get { return geometryParts_; }
    }

    /// <summary>Field number for the "ChildNodes" field.</summary>
    public const int ChildNodesFieldNumber = 5;
    private static readonly pb::FieldCodec<ulong> _repeated_childNodes_codec
        = pb::FieldCodec.ForUInt64(42);
    private readonly pbc::RepeatedField<ulong> childNodes_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> ChildNodes {
      get { return childNodes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PHierarchyNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PHierarchyNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueID != other.UniqueID) return false;
      if (ParentID != other.ParentID) return false;
      if (MetadataID != other.MetadataID) return false;
      if(!geometryParts_.Equals(other.geometryParts_)) return false;
      if(!childNodes_.Equals(other.childNodes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueID != 0UL) hash ^= UniqueID.GetHashCode();
      if (ParentID != 0UL) hash ^= ParentID.GetHashCode();
      if (MetadataID != 0UL) hash ^= MetadataID.GetHashCode();
      hash ^= geometryParts_.GetHashCode();
      hash ^= childNodes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (ParentID != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ParentID);
      }
      if (MetadataID != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MetadataID);
      }
      geometryParts_.WriteTo(output, _repeated_geometryParts_codec);
      childNodes_.WriteTo(output, _repeated_childNodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (ParentID != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(ParentID);
      }
      if (MetadataID != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MetadataID);
      }
      geometryParts_.WriteTo(ref output, _repeated_geometryParts_codec);
      childNodes_.WriteTo(ref output, _repeated_childNodes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UniqueID);
      }
      if (ParentID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ParentID);
      }
      if (MetadataID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MetadataID);
      }
      size += geometryParts_.CalculateSize(_repeated_geometryParts_codec);
      size += childNodes_.CalculateSize(_repeated_childNodes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PHierarchyNode other) {
      if (other == null) {
        return;
      }
      if (other.UniqueID != 0UL) {
        UniqueID = other.UniqueID;
      }
      if (other.ParentID != 0UL) {
        ParentID = other.ParentID;
      }
      if (other.MetadataID != 0UL) {
        MetadataID = other.MetadataID;
      }
      geometryParts_.Add(other.geometryParts_);
      childNodes_.Add(other.childNodes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 16: {
            ParentID = input.ReadUInt64();
            break;
          }
          case 24: {
            MetadataID = input.ReadUInt64();
            break;
          }
          case 34: {
            geometryParts_.AddEntriesFrom(input, _repeated_geometryParts_codec);
            break;
          }
          case 42:
          case 40: {
            childNodes_.AddEntriesFrom(input, _repeated_childNodes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 16: {
            ParentID = input.ReadUInt64();
            break;
          }
          case 24: {
            MetadataID = input.ReadUInt64();
            break;
          }
          case 34: {
            geometryParts_.AddEntriesFrom(ref input, _repeated_geometryParts_codec);
            break;
          }
          case 42:
          case 40: {
            childNodes_.AddEntriesFrom(ref input, _repeated_childNodes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PMetadataNode : pb::IMessage<PMetadataNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PMetadataNode> _parser = new pb::MessageParser<PMetadataNode>(() => new PMetadataNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMetadataNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMetadataNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMetadataNode(PMetadataNode other) : this() {
      uniqueID_ = other.uniqueID_;
      metadata_ = other.metadata_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMetadataNode Clone() {
      return new PMetadataNode(this);
    }

    /// <summary>Field number for the "UniqueID" field.</summary>
    public const int UniqueIDFieldNumber = 1;
    private ulong uniqueID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UniqueID {
      get { return uniqueID_; }
      set {
        uniqueID_ = value;
      }
    }

    /// <summary>Field number for the "Metadata" field.</summary>
    public const int MetadataFieldNumber = 2;
    private string metadata_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMetadataNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMetadataNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueID != other.UniqueID) return false;
      if (Metadata != other.Metadata) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueID != 0UL) hash ^= UniqueID.GetHashCode();
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (Metadata.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Metadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UniqueID);
      }
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMetadataNode other) {
      if (other == null) {
        return;
      }
      if (other.UniqueID != 0UL) {
        UniqueID = other.UniqueID;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 18: {
            Metadata = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 18: {
            Metadata = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PGeometryNode : pb::IMessage<PGeometryNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PGeometryNode> _parser = new pb::MessageParser<PGeometryNode>(() => new PGeometryNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PGeometryNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryNode(PGeometryNode other) : this() {
      uniqueID_ = other.uniqueID_;
      lodNumber_ = other.lodNumber_;
      lODs_ = other.lODs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PGeometryNode Clone() {
      return new PGeometryNode(this);
    }

    /// <summary>Field number for the "UniqueID" field.</summary>
    public const int UniqueIDFieldNumber = 1;
    private ulong uniqueID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong UniqueID {
      get { return uniqueID_; }
      set {
        uniqueID_ = value;
      }
    }

    /// <summary>Field number for the "LodNumber" field.</summary>
    public const int LodNumberFieldNumber = 2;
    private int lodNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LodNumber {
      get { return lodNumber_; }
      set {
        lodNumber_ = value;
      }
    }

    /// <summary>Field number for the "LODs" field.</summary>
    public const int LODsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::PixyzWorkerProcess.Processing.Protobufs.PLOD> _repeated_lODs_codec
        = pb::FieldCodec.ForMessage(26, global::PixyzWorkerProcess.Processing.Protobufs.PLOD.Parser);
    private readonly pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PLOD> lODs_ = new pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PLOD>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::PixyzWorkerProcess.Processing.Protobufs.PLOD> LODs {
      get { return lODs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PGeometryNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PGeometryNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UniqueID != other.UniqueID) return false;
      if (LodNumber != other.LodNumber) return false;
      if(!lODs_.Equals(other.lODs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UniqueID != 0UL) hash ^= UniqueID.GetHashCode();
      if (LodNumber != 0) hash ^= LodNumber.GetHashCode();
      hash ^= lODs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (LodNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LodNumber);
      }
      lODs_.WriteTo(output, _repeated_lODs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UniqueID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(UniqueID);
      }
      if (LodNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LodNumber);
      }
      lODs_.WriteTo(ref output, _repeated_lODs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UniqueID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(UniqueID);
      }
      if (LodNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LodNumber);
      }
      size += lODs_.CalculateSize(_repeated_lODs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PGeometryNode other) {
      if (other == null) {
        return;
      }
      if (other.UniqueID != 0UL) {
        UniqueID = other.UniqueID;
      }
      if (other.LodNumber != 0) {
        LodNumber = other.LodNumber;
      }
      lODs_.Add(other.lODs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 16: {
            LodNumber = input.ReadInt32();
            break;
          }
          case 26: {
            lODs_.AddEntriesFrom(input, _repeated_lODs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UniqueID = input.ReadUInt64();
            break;
          }
          case 16: {
            LodNumber = input.ReadInt32();
            break;
          }
          case 26: {
            lODs_.AddEntriesFrom(ref input, _repeated_lODs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class PNodeMessage : pb::IMessage<PNodeMessage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PNodeMessage> _parser = new pb::MessageParser<PNodeMessage>(() => new PNodeMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PNodeMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::PixyzWorkerProcess.Processing.Protobufs.ProtobufMessagesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNodeMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNodeMessage(PNodeMessage other) : this() {
      modelID_ = other.modelID_;
      errors_ = other.errors_.Clone();
      hierarchyNode_ = other.hierarchyNode_ != null ? other.hierarchyNode_.Clone() : null;
      metadataNode_ = other.metadataNode_ != null ? other.metadataNode_.Clone() : null;
      geometryNode_ = other.geometryNode_ != null ? other.geometryNode_.Clone() : null;
      done_ = other.done_;
      messageCount_ = other.messageCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PNodeMessage Clone() {
      return new PNodeMessage(this);
    }

    /// <summary>Field number for the "ModelID" field.</summary>
    public const int ModelIDFieldNumber = 1;
    private ulong modelID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ModelID {
      get { return modelID_; }
      set {
        modelID_ = value;
      }
    }

    /// <summary>Field number for the "Errors" field.</summary>
    public const int ErrorsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_errors_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> errors_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "HierarchyNode" field.</summary>
    public const int HierarchyNodeFieldNumber = 3;
    private global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode hierarchyNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode HierarchyNode {
      get { return hierarchyNode_; }
      set {
        hierarchyNode_ = value;
      }
    }

    /// <summary>Field number for the "MetadataNode" field.</summary>
    public const int MetadataNodeFieldNumber = 4;
    private global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode metadataNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode MetadataNode {
      get { return metadataNode_; }
      set {
        metadataNode_ = value;
      }
    }

    /// <summary>Field number for the "GeometryNode" field.</summary>
    public const int GeometryNodeFieldNumber = 5;
    private global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode geometryNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode GeometryNode {
      get { return geometryNode_; }
      set {
        geometryNode_ = value;
      }
    }

    /// <summary>Field number for the "Done" field.</summary>
    public const int DoneFieldNumber = 6;
    private bool done_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Done {
      get { return done_; }
      set {
        done_ = value;
      }
    }

    /// <summary>Field number for the "MessageCount" field.</summary>
    public const int MessageCountFieldNumber = 7;
    private int messageCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MessageCount {
      get { return messageCount_; }
      set {
        messageCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PNodeMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PNodeMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelID != other.ModelID) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!object.Equals(HierarchyNode, other.HierarchyNode)) return false;
      if (!object.Equals(MetadataNode, other.MetadataNode)) return false;
      if (!object.Equals(GeometryNode, other.GeometryNode)) return false;
      if (Done != other.Done) return false;
      if (MessageCount != other.MessageCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelID != 0UL) hash ^= ModelID.GetHashCode();
      hash ^= errors_.GetHashCode();
      if (hierarchyNode_ != null) hash ^= HierarchyNode.GetHashCode();
      if (metadataNode_ != null) hash ^= MetadataNode.GetHashCode();
      if (geometryNode_ != null) hash ^= GeometryNode.GetHashCode();
      if (Done != false) hash ^= Done.GetHashCode();
      if (MessageCount != 0) hash ^= MessageCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModelID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ModelID);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      if (hierarchyNode_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HierarchyNode);
      }
      if (metadataNode_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MetadataNode);
      }
      if (geometryNode_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GeometryNode);
      }
      if (Done != false) {
        output.WriteRawTag(48);
        output.WriteBool(Done);
      }
      if (MessageCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MessageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModelID != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(ModelID);
      }
      errors_.WriteTo(ref output, _repeated_errors_codec);
      if (hierarchyNode_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(HierarchyNode);
      }
      if (metadataNode_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MetadataNode);
      }
      if (geometryNode_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(GeometryNode);
      }
      if (Done != false) {
        output.WriteRawTag(48);
        output.WriteBool(Done);
      }
      if (MessageCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(MessageCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModelID != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ModelID);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      if (hierarchyNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HierarchyNode);
      }
      if (metadataNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetadataNode);
      }
      if (geometryNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeometryNode);
      }
      if (Done != false) {
        size += 1 + 1;
      }
      if (MessageCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MessageCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PNodeMessage other) {
      if (other == null) {
        return;
      }
      if (other.ModelID != 0UL) {
        ModelID = other.ModelID;
      }
      errors_.Add(other.errors_);
      if (other.hierarchyNode_ != null) {
        if (hierarchyNode_ == null) {
          HierarchyNode = new global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode();
        }
        HierarchyNode.MergeFrom(other.HierarchyNode);
      }
      if (other.metadataNode_ != null) {
        if (metadataNode_ == null) {
          MetadataNode = new global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode();
        }
        MetadataNode.MergeFrom(other.MetadataNode);
      }
      if (other.geometryNode_ != null) {
        if (geometryNode_ == null) {
          GeometryNode = new global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode();
        }
        GeometryNode.MergeFrom(other.GeometryNode);
      }
      if (other.Done != false) {
        Done = other.Done;
      }
      if (other.MessageCount != 0) {
        MessageCount = other.MessageCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModelID = input.ReadUInt64();
            break;
          }
          case 18: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 26: {
            if (hierarchyNode_ == null) {
              HierarchyNode = new global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode();
            }
            input.ReadMessage(HierarchyNode);
            break;
          }
          case 34: {
            if (metadataNode_ == null) {
              MetadataNode = new global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode();
            }
            input.ReadMessage(MetadataNode);
            break;
          }
          case 42: {
            if (geometryNode_ == null) {
              GeometryNode = new global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode();
            }
            input.ReadMessage(GeometryNode);
            break;
          }
          case 48: {
            Done = input.ReadBool();
            break;
          }
          case 56: {
            MessageCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ModelID = input.ReadUInt64();
            break;
          }
          case 18: {
            errors_.AddEntriesFrom(ref input, _repeated_errors_codec);
            break;
          }
          case 26: {
            if (hierarchyNode_ == null) {
              HierarchyNode = new global::PixyzWorkerProcess.Processing.Protobufs.PHierarchyNode();
            }
            input.ReadMessage(HierarchyNode);
            break;
          }
          case 34: {
            if (metadataNode_ == null) {
              MetadataNode = new global::PixyzWorkerProcess.Processing.Protobufs.PMetadataNode();
            }
            input.ReadMessage(MetadataNode);
            break;
          }
          case 42: {
            if (geometryNode_ == null) {
              GeometryNode = new global::PixyzWorkerProcess.Processing.Protobufs.PGeometryNode();
            }
            input.ReadMessage(GeometryNode);
            break;
          }
          case 48: {
            Done = input.ReadBool();
            break;
          }
          case 56: {
            MessageCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
