// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FB
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FBGeometryNode : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FBGeometryNode GetRootAsFBGeometryNode(ByteBuffer _bb) { return GetRootAsFBGeometryNode(_bb, new FBGeometryNode()); }
  public static FBGeometryNode GetRootAsFBGeometryNode(ByteBuffer _bb, FBGeometryNode obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FBGeometryNode __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong UniqueID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public int LodNumber { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public FB.FBLOD? LOD { get { int o = __p.__offset(8); return o != 0 ? (FB.FBLOD?)(new FB.FBLOD()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<FB.FBGeometryNode> CreateFBGeometryNode(FlatBufferBuilder builder,
      ulong UniqueID = 0,
      int LodNumber = 0,
      Offset<FB.FBLOD> LODOffset = default(Offset<FB.FBLOD>)) {
    builder.StartTable(3);
    FBGeometryNode.AddUniqueID(builder, UniqueID);
    FBGeometryNode.AddLOD(builder, LODOffset);
    FBGeometryNode.AddLodNumber(builder, LodNumber);
    return FBGeometryNode.EndFBGeometryNode(builder);
  }

  public static void StartFBGeometryNode(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUniqueID(FlatBufferBuilder builder, ulong UniqueID) { builder.AddUlong(0, UniqueID, 0); }
  public static void AddLodNumber(FlatBufferBuilder builder, int LodNumber) { builder.AddInt(1, LodNumber, 0); }
  public static void AddLOD(FlatBufferBuilder builder, Offset<FB.FBLOD> LODOffset) { builder.AddOffset(2, LODOffset.Value, 0); }
  public static Offset<FB.FBGeometryNode> EndFBGeometryNode(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FB.FBGeometryNode>(o);
  }
};


}
