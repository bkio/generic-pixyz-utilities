// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FB
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FBNodeMessage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FBNodeMessage GetRootAsFBNodeMessage(ByteBuffer _bb) { return GetRootAsFBNodeMessage(_bb, new FBNodeMessage()); }
  public static FBNodeMessage GetRootAsFBNodeMessage(ByteBuffer _bb, FBNodeMessage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FBNodeMessage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong ModelID { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUlong(o + __p.bb_pos) : (ulong)0; } }
  public string Errors { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetErrorsBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetErrorsBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetErrorsArray() { return __p.__vector_as_array<byte>(6); }
  public FB.FBHierarchyNode? HierarchyNode { get { int o = __p.__offset(8); return o != 0 ? (FB.FBHierarchyNode?)(new FB.FBHierarchyNode()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FB.FBMetadataNode? MetadataNode { get { int o = __p.__offset(10); return o != 0 ? (FB.FBMetadataNode?)(new FB.FBMetadataNode()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public FB.FBGeometryNode? GeometryNode { get { int o = __p.__offset(12); return o != 0 ? (FB.FBGeometryNode?)(new FB.FBGeometryNode()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public bool Done { get { int o = __p.__offset(14); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public int MessageCount { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<FB.FBNodeMessage> CreateFBNodeMessage(FlatBufferBuilder builder,
      ulong ModelID = 0,
      StringOffset ErrorsOffset = default(StringOffset),
      Offset<FB.FBHierarchyNode> HierarchyNodeOffset = default(Offset<FB.FBHierarchyNode>),
      Offset<FB.FBMetadataNode> MetadataNodeOffset = default(Offset<FB.FBMetadataNode>),
      Offset<FB.FBGeometryNode> GeometryNodeOffset = default(Offset<FB.FBGeometryNode>),
      bool Done = false,
      int MessageCount = 0) {
    builder.StartTable(7);
    FBNodeMessage.AddModelID(builder, ModelID);
    FBNodeMessage.AddMessageCount(builder, MessageCount);
    FBNodeMessage.AddGeometryNode(builder, GeometryNodeOffset);
    FBNodeMessage.AddMetadataNode(builder, MetadataNodeOffset);
    FBNodeMessage.AddHierarchyNode(builder, HierarchyNodeOffset);
    FBNodeMessage.AddErrors(builder, ErrorsOffset);
    FBNodeMessage.AddDone(builder, Done);
    return FBNodeMessage.EndFBNodeMessage(builder);
  }

  public static void StartFBNodeMessage(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddModelID(FlatBufferBuilder builder, ulong ModelID) { builder.AddUlong(0, ModelID, 0); }
  public static void AddErrors(FlatBufferBuilder builder, StringOffset ErrorsOffset) { builder.AddOffset(1, ErrorsOffset.Value, 0); }
  public static void AddHierarchyNode(FlatBufferBuilder builder, Offset<FB.FBHierarchyNode> HierarchyNodeOffset) { builder.AddOffset(2, HierarchyNodeOffset.Value, 0); }
  public static void AddMetadataNode(FlatBufferBuilder builder, Offset<FB.FBMetadataNode> MetadataNodeOffset) { builder.AddOffset(3, MetadataNodeOffset.Value, 0); }
  public static void AddGeometryNode(FlatBufferBuilder builder, Offset<FB.FBGeometryNode> GeometryNodeOffset) { builder.AddOffset(4, GeometryNodeOffset.Value, 0); }
  public static void AddDone(FlatBufferBuilder builder, bool Done) { builder.AddBool(5, Done, false); }
  public static void AddMessageCount(FlatBufferBuilder builder, int MessageCount) { builder.AddInt(6, MessageCount, 0); }
  public static Offset<FB.FBNodeMessage> EndFBNodeMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FB.FBNodeMessage>(o);
  }
  public static void FinishFBNodeMessageBuffer(FlatBufferBuilder builder, Offset<FB.FBNodeMessage> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedFBNodeMessageBuffer(FlatBufferBuilder builder, Offset<FB.FBNodeMessage> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
